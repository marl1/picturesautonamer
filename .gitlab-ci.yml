# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - .pre
  - build

pre_config:
  image: maven:3.9.6-eclipse-temurin-21
  stage: .pre
  script:
      - VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.1:evaluate -Dexpression=project.version -q -DforceStdout)
      - echo $VERSION
      - ARTIFACT_ID=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.1:evaluate -Dexpression=project.artifactId -q -DforceStdout)
      - echo $ARTIFACT_ID
      - export FULL_NAME=$(echo "$ARTIFACT_ID"-"$VERSION")
      - echo FULL_NAME=$FULL_NAME >> mesVariables.env      
  artifacts:
    paths:
      - public
    name: "artifacts"
    reports:
      dotenv: mesVariables.env

build_win_artifacts:
  image: maven:3.9.6-eclipse-temurin-21
  stage: build
  script:
      - 'mvn clean install -Djavafx.platform=win -P windows-build,dl-windows-jdk'
      - 'ls target'
      - 'mv target/{FULL_NAME}-win ./{FULL_NAME}-win'
  artifacts:
    name: $FULL_NAME-win
    paths:
      - ${FULL_NAME}-win/*
    expire_in: 2 hours

build_linux_artifacts:
  image: maven:3.9.6-eclipse-temurin-21
  stage: build
  script:
      - 'mvn clean install -Djavafx.platform=linux -P linux-build,dl-linux-jdk'
      - 'ls target'
      - 'mv target/{FULL_NAME}-linux ./{FULL_NAME}-linux'
  artifacts:
    name: $FULL_NAME-linux
    paths:
      - ${FULL_NAME}-linux/*
    expire_in: 2 hours

build_win_artifacts_for_tags:
  image: maven:3.9.6-eclipse-temurin-21
  stage: build
  script:
      - 'mvn clean install -Djavafx.platform=win -P windows-build,dl-windows-jdk'
      - 'ls target'
  artifacts:
    name: $FULL_NAME-win
    paths:
      - target/${FULL_NAME}-win/*
    expire_in: never
  rules:
    - if: $CI_COMMIT_TAG
    
build_linux_artifacts_for_tags:
  image: maven:3.9.6-eclipse-temurin-21
  stage: build
  script:
      - 'mvn clean install -Djavafx.platform=linux -P linux-build,dl-linux-jdk'
      - 'ls target'
  artifacts:
    name: $FULL_NAME-linux
    paths:
      - target/${FULL_NAME}-linux/*
    expire_in: never
  rules:
    - if: $CI_COMMIT_TAG